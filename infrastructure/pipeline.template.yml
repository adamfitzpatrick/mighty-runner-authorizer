AWSTemplateFormatVersion: 2010-09-09
Description: Template for CodePipeline instance to build and deploy the application
Parameters:
  PipelineName:
    Type: String
    Default: mighty-runner-authorizer
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  ChangeSetName:
    Type: String
    Default: production-change-set
Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", [!Ref PipelineName, "pipeline-role"]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - codepipeline.amazonaws.com
  PipelinePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-", [!Ref PipelineName, "pipeline-role-policy"]]
      Roles:
      - !Ref PipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - cloudformation:CreateChangeSet
          - cloudformation:CreateStack
          - cloudformation:DeleteChangeSet
          - cloudformation:DeleteStack
          - cloudformation:DescribeChangeSet
          - cloudformation:DescribeStacks
          - cloudformation:ExecuteChangeSet
          - cloudformation:UpdateStack
          - codebuild:BatchGetBuilds
          - codebuild:StartBuild
          - iam:PassRole
          - s3:PutObject
          - s3:GetObject
          Resource: "*"
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", [!Ref PipelineName, "cloudformation-role"]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - cloudformation.amazonaws.com
  CloudFormationRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-", [!Ref PipelineName, "cloudformation-role-policy"]]
      Roles:
      - !Ref CloudFormationRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - iam:AttachRolePolicy
          - iam:CreatePolicy
          - iam:CreateRole
          - iam:DeleteRole
          - iam:DeleteRolePolicy
          - iam:GetRole
          - iam:PassRole
          - iam:PutRolePolicy
          - lambda:CreateFunction
          - lambda:DeleteFunction
          - lambda:GetFunction
          - lambda:UpdateFunctionCode
          - s3:GetObject
          Resource: "*"
  BuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ["-", [!Ref PipelineName, "build-role"]]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - sts:AssumeRole
          Principal:
            Service:
            - codebuild.amazonaws.com
  BuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join ["-", [!Ref PipelineName, "build-role-policy"]]
      Roles:
      - !Ref BuildRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:CreateLogGroup
          - logs:PutLogEvents
          - codebuild:StartBuild
          - codebuild:UpdateProject
          - codecommit:GetBranch
          - codecommit:GetCommit
          - s3:GetObject
          - s3:PutObject
          - s3:PutObjectAcl
          - s3:DeleteObject
          Resource: "*"
  Build:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref PipelineName
      Description: Unit test and coverage checking for mighty-runner-authorizer lambda
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:3.0
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
      ServiceRole: !Ref BuildRole
      Source:
        Type: CODEPIPELINE
  AuthorizerPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref PipelineName
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Location: mighty-runner-infrastructure
        Type: S3
      Stages:
      - Name: Source
        Actions:
        - Name: GitHub
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          Configuration:
            Owner: adamfitzpatrick
            Repo: mighty-runner-authorizer
            Branch: feature/switch-to-cloudformation
            OAuthToken: !Ref GitHubOAuthToken
          OutputArtifacts:
          - Name: AuthorizerSource
      - Name: Review
        Actions:
        - Name: Test
          ActionTypeId:
            Category: Build
            Owner: AWS
            Provider: CodeBuild
            Version: 1
          InputArtifacts:
          - Name: AuthorizerSource
          Configuration:
            ProjectName: !Ref Build
            PrimarySource: AuthorizerSource
          RunOrder: 1
        - Name: DevDeploy
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          InputArtifacts:
          - Name: AuthorizerSource
          Configuration:
            ActionMode: REPLACE_ON_FAILURE
            StackName: !Join ["-", ["dev", !Ref PipelineName]]
            TemplatePath: AuthorizerSource::infrastructure/authorizer.template.yml
            TemplateConfiguration: AuthorizerSource::infrastructure/dev-template-config.json
            RoleArn: !GetAtt CloudFormationRole.Arn
            Capabilities: CAPABILITY_NAMED_IAM
            ParameterOverrides: |
              { "AuthorizerCodeArtifact": { "Fn::GetArtifactAtt" : ["AuthorizerSource", "ObjectKey"] }}
          RunOrder: 2
        - Name: PrdCreateChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          InputArtifacts:
          - Name: AuthorizerSource
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            StackName: !Join ["-", ["prd", !Ref PipelineName]]
            ChangeSetName: !Ref ChangeSetName
            TemplatePath: AuthorizerSource::infrastructure/authorizer.template.yml
            TemplateConfiguration: AuthorizerSource::infrastructure/prd-template-config.json
            RoleArn: !GetAtt CloudFormationRole.Arn
            Capabilities: CAPABILITY_NAMED_IAM
            ParameterOverrides: |
              { "AuthorizerCodeArtifact": { "Fn::GetArtifactAtt" : ["AuthorizerSource", "ObjectKey"] }}
          RunOrder: 2
      - Name: Release
        Actions:
        - Name: ApproveForProduction
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Provider: Manual
            Version: 1
          Configuration:
            CustomData: Approve deployment of authorizer lambda to production?
          RunOrder: 1
        - Name: DeployPrd
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            StackName: !Join ["-", ["prd", !Ref PipelineName]]
            ChangeSetName: !Ref ChangeSetName
            RoleArn: !GetAtt CloudFormationRole.Arn
          RunOrder: 2

